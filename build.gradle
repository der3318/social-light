buildscript {
    ext {
        kotlinVersion = "1.3.50"
        joobyVersion = "2.6.1"
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"

        classpath "io.jooby:jooby-gradle-plugin:$joobyVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
    }
}

apply plugin: "io.spring.dependency-management"
apply plugin: "com.google.osdetector"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "jooby"
apply plugin: "jacoco"

/** run gradlew install to export pom-default.xml under build/poms/ */
apply plugin: "maven" 

group "der3318"
version "1.0.0"
mainClassName = "der3318.App"
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

/** utf-8 encoding */
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "io.jooby:jooby-bom:$joobyVersion"
    }
}

dependencies {
    /** template engine */
    compile "io.jooby:jooby-pebble:2.6.1"

    /** database interface */
    compile "io.jooby:jooby-hikari:2.6.1"
    compile "io.jooby:jooby-jdbi:2.6.1"

    /** database dependency */
    compile "com.h2database:h2:1.3.148"
    compile "org.xerial:sqlite-jdbc:3.8.11.2"

    /** json utility */
    compile "io.jooby:jooby-jackson:2.6.1"

    compile "io.jooby:jooby-utow"
    compile "ch.qos.logback:logback-classic"

    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "org.junit.jupiter:junit-jupiter-engine"
    testCompile "io.jooby:jooby-test"
    testCompile "com.squareup.okhttp3:okhttp"
}

test {
    useJUnitPlatform()
}

/** Java debug information: */
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
    options.debug = true
}

shadowJar {
    mergeServiceFiles()
}
